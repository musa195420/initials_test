# Minimum iOS deployment version
platform :ios, '13.0'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Define Xcode build schemes for the Runner project
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Resolve Flutter root for plugin linking
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter build ios' first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end

  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}."
end

# Load Flutter pod helper from Flutter SDK
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Main iOS target block
target 'Runner' do
  # Use static frameworks to avoid module errors like "No such module 'Flutter'"
  use_frameworks! :linkage => :static

  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end
